# Tidy Tuesday Data

The R for Data Science Community releases data that can be used to practice data science skills.

If you do decide to use any of these data set, we kindly ask to fill the R4DS Survey to indicate that the data set are being used in class.

## Taylor Swift Data

The `taylor` package provides the `taylor_all_songs` and `taylor_album_songs` data sets that contain information on all of Taylor Swift's songs. Each data set contains basic information of songs (song release date, album releaser, ...) and Spotify API level data (danceability score, energy score, ...). You can install the `taylor` package with the following code:

```{r}
#| echo: true
#| eval: false
install.packages("taylor")

```

Access the data with:

```{r}
#| echo: true
#| eval: false

taylor::taylor_album_songs

## OR

library(taylor)
taylor::taylor_album_songs
```

The help documentation can be found here: <https://taylor.wjakethompson.com/>

### Data

One hundred randomly selected songs are displayed below:

```{r}
#| echo: false

taylor::taylor_album_songs |> 
  dplyr::slice_sample(n = 100) |> 
  DT::datatable(options = list(dom = "tp", pageLength = 5))

```

## Anime

The `anime` data set from MyAnimeList contains information on rankings and popularity scores of different anime episodes. More information can be found [here.](https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-04-23) The data set contains 77,911 observation and 28 variables. **Warning: This data set will take over 30 MB to load up in R.**

```{r}
#| message: false
anime <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-23/tidy_anime.csv")
```

### Data

Here is a sample of the data set, with the `synopsis` variable removed to display the table better.

```{r}
#| echo: false
anime |> 
  dplyr::slice_sample(n=100) |> 
  dplyr::select(-synopsis) |> 
  DT::datatable(options = list(dom = "tp", pageLength = 3))

```

## Starbucks

```{r}
#| message: false

starbucks <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-21/starbucks.csv')

```

### Data

A random sample of 100 products are shown.

```{r}
starbucks |> 
  dplyr::slice_sample(n=100) |> 
  DT::datatable(options = list(dom = "tp", pageLength = 5))
```

## Mr. Trash Wheel

Mr. Trash Wheel is a machine designed to collect trash in the Baltimore Harbor.

```{r}
#| message: false

trash <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-03-05/trashwheel.csv')

```

### Data

A random sample of the data:

```{r}
trash |> 
  dplyr::slice_sample(n=100) |> 
  DT::datatable(options = list(dom = "tp", pageLength = 5))
```

### Sample Plot

#### Cleaning Data

```{r}
#| label: ex_clean
#| echo: false
#| eval: true
#| fig-align: center
#| message: false


library(dtrackr)
library(tidyverse)

trash |> track(.messages = c("Start with the trash data set",
                              "Remove Variable that have high missing values")) |> 
  select(-SportsBalls, -GlassBottles, -Wrappers, -HomesPowered) |>
  comment(.messages = c("Remove Gwynnda Trash Wheel due to several missing values")) |> 
  filter(Name != "Gwynnda Trash Wheel") |> 
  comment(.messages = c("Remove all missing data",
                        "There are currently {.count} observations in the data set.")) |> 
  drop_na() |> 
  comment(.messages = c("Convert the Date character variable to a POSIX with mdy()")) |> 
  mutate(Date = mdy(Date)) |> 
  pivot_longer(PlasticBottles:PlasticBags, names_to = "Trash", values_to = "Value") |> 
  comment(.messages = c("Change the Data from wide to long by the trash variable using pivot_longer()",
                        "There are now {.count} observations in the data set.")) |> 
  flowchart()


```

```{r}
#| echo: true
#| eval: true

library(tidyverse)

df <- trash |> select(-SportsBalls, -GlassBottles, -Wrappers, -HomesPowered) |> 
  filter(Name != "Gwynnda Trash Wheel") |> drop_na() |> 
  mutate(Date = mdy(Date)) |> 
  pivot_longer(PlasticBottles:PlasticBags, names_to = "Trash", values_to = "Value")

```

#### Plot

```{r}
#| label: ex1
#| code-fold: true
#| eval: true
#| fig-alt: |
#|    The plot shows two separate word clouds demonstrating the words that most 
#|    common words in project titles in both Fall and Spring funding sessions. 
#|    The most common word in both Fall and Spring was data. Other common words 
#|    in Fall are dbi, api, and development. The most common word in Spring are 
#|    package, interactive and infrastructure.


df |> ggplot(aes(x = Date, y = log(Value), color = Trash)) +
  geom_line() +
  facet_wrap(~Name, nrow = 3) +
  theme_bw() +
  ylab("Number of Items (log-scale)") +
  ggtitle("Trash Collection over the Years") +
  scale_color_discrete(labels = c("Cigarette Butts", "Plastic Bags", "Plastic Bottles", "Polystyrene")) +
  theme(legend.title = element_blank(),
        legend.position = "bottom",
        axis.title.x = element_blank())
```
